// Generated by Apple Swift version 2.1 (swiftlang-700.1.101.6 clang-700.1.76)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Security;
#endif

#import <CocoaMQTT/CocoaMQTT.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class GCDAsyncSocket;
@class NSData;
@class NSError;


/// Main CocoaMQTT Class
///
/// Notice: GCDAsyncSocket need delegate to extend NSObject
SWIFT_CLASS("_TtC9CocoaMQTT9CocoaMQTT")
@interface CocoaMQTT : NSObject <GCDAsyncSocketDelegate>
@property (nonatomic, copy) NSString * __nonnull host;
@property (nonatomic) uint16_t port;
@property (nonatomic, copy) NSString * __nonnull clientId;
@property (nonatomic, copy) NSString * __nullable username;
@property (nonatomic, copy) NSString * __nullable password;
@property (nonatomic) BOOL secureMQTT;
@property (nonatomic) BOOL cleanSess;
@property (nonatomic) uint16_t keepAlive;
- (nonnull instancetype)initWithClientId:(NSString * __nonnull)clientId host:(NSString * __nonnull)host port:(uint16_t)port OBJC_DESIGNATED_INITIALIZER;
- (BOOL)connect;
- (uint16_t)unsubscribe:(NSString * __nonnull)topic;
- (void)ping;
- (void)disconnect;
- (void)socket:(GCDAsyncSocket * __null_unspecified)sock didConnectToHost:(NSString * __null_unspecified)host port:(uint16_t)port;
- (void)socket:(GCDAsyncSocket * __null_unspecified)sock didReceiveTrust:(SecTrustRef __null_unspecified)trust completionHandler:(void (^ __null_unspecified)(BOOL))completionHandler;
- (void)socketDidSecure:(GCDAsyncSocket * __null_unspecified)sock;
- (void)socket:(GCDAsyncSocket * __null_unspecified)sock didWriteDataWithTag:(NSInteger)tag;
- (void)socket:(GCDAsyncSocket * __null_unspecified)sock didReadData:(NSData * __null_unspecified)data withTag:(NSInteger)tag;
- (void)socketDidDisconnect:(GCDAsyncSocket * __null_unspecified)sock withError:(NSError * __null_unspecified)err;
@end

#pragma clang diagnostic pop
